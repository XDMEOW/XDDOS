# ---------------------------------------
# Spring Configurations
# ---------------------------------------
# Setup your MySQL Connection
spring.datasource.url=jdbc:mysql://localhost:3306/xddos-api
# MySQL Username
spring.datasource.username=root
# MySQL Password
spring.datasource.password=
# What should we do, if you are restarting the WebServer?
# Types:
#     - none = 	No database Schema initialization
#     - create = Drops and creates the schema at the application startup. With this option, all your data will be gone on each startup.
#     - create-drop = Creates schema at the startup and destroys the schema on context closure. Useful for unit tests.
#     - validate = Only checks if the Schema matches the Entities. If the schema doesn?t match, then the application startup will fail. Makes no changes to the database.
#     - update = 	Updates the schema only if necessary. For example, If a new field was added in an entity, then it will simply alter the table for a new column without destroying the data.
spring.jpa.hibernate.ddl-auto=update
# On which port should the backend website listen?
server.port=8080
# Should we use https?
security.require-ssl=false
# Where is your SSL Certificate located?
server.ssl.key-store=/etc/letsencrypt/live/example.com/keystore.p12
# Password from your Certificate
server.ssl.key-store-password=<your-password>
# What Key-Store-Type did you used?
server.ssl.keyStoreType=PKCS12
# Which KeyAlias did you used?
server.ssl.keyAlias=tomcat